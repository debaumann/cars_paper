Training Epoch 1/22:   9%|▉         | 748/8299 [04:11<42:45,  2.94it/s]It looks like you are trying to rescale already rescaled images. If the input images have pixel values between 0 and 1, set `do_rescale=False` to avoid rescaling them again.
Training Epoch 1/22: 100%|██████████| 8299/8299 [48:31<00:00,  2.85it/s]  
Epoch [1/22] Train: Loss: 4.2147, Class Loss: 4.0545, heat Loss: 0.0080, Accuracy: 0.1374
Validation Epoch 1/22:   9%|▉         | 180/2022 [00:43<05:22,  5.72it/s]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
Validation Epoch 1/22: 100%|██████████| 2022/2022 [10:49<00:00,  3.11it/s]
Validation Epoch [1/22] Loss: 3.8283, Class Loss: 3.7055, heat Loss: 0.0061, Accuracy: 0.1944
Saved best model with validation loss: 3.8283
Training Epoch 2/22: 100%|██████████| 8299/8299 [1:07:17<00:00,  2.06it/s] 
Epoch [2/22] Train: Loss: 3.6153, Class Loss: 3.4601, heat Loss: 0.0078, Accuracy: 0.2122
Validation Epoch 2/22:   9%|▉         | 180/2022 [01:24<26:57,  1.14it/s]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
Validation Epoch 2/22: 100%|██████████| 2022/2022 [17:35<00:00,  1.92it/s]  
Validation Epoch [2/22] Loss: 3.6424, Class Loss: 3.4713, heat Loss: 0.0086, Accuracy: 0.2047
Saved best model with validation loss: 3.6424
Training Epoch 3/22: 100%|██████████| 8299/8299 [1:04:23<00:00,  2.15it/s] 
Epoch [3/22] Train: Loss: 3.2357, Class Loss: 3.0820, heat Loss: 0.0077, Accuracy: 0.2480
Validation Epoch 3/22:   9%|▉         | 180/2022 [00:31<05:00,  6.13it/s]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
Validation Epoch 3/22: 100%|██████████| 2022/2022 [13:59<00:00,  2.41it/s]
Validation Epoch [3/22] Loss: 3.1189, Class Loss: 2.8791, heat Loss: 0.0120, Accuracy: 0.2809
Saved best model with validation loss: 3.1189
Training Epoch 4/22: 100%|██████████| 8299/8299 [1:01:52<00:00,  2.24it/s]
Epoch [4/22] Train: Loss: 3.0001, Class Loss: 2.8493, heat Loss: 0.0075, Accuracy: 0.2789
Validation Epoch 4/22:   9%|▉         | 180/2022 [01:05<11:52,  2.59it/s]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
Validation Epoch 4/22: 100%|██████████| 2022/2022 [12:42<00:00,  2.65it/s]
Validation Epoch [4/22] Loss: 3.0097, Class Loss: 2.8099, heat Loss: 0.0100, Accuracy: 0.2977
Saved best model with validation loss: 3.0097
Training Epoch 5/22: 100%|██████████| 8299/8299 [1:08:52<00:00,  2.01it/s]
Epoch [5/22] Train: Loss: 2.8253, Class Loss: 2.6763, heat Loss: 0.0075, Accuracy: 0.3086
Validation Epoch 5/22:   9%|▉         | 180/2022 [01:07<05:47,  5.31it/s]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
Validation Epoch 5/22: 100%|██████████| 2022/2022 [16:16<00:00,  2.07it/s]
Validation Epoch [5/22] Loss: 2.8608, Class Loss: 2.6719, heat Loss: 0.0094, Accuracy: 0.3101
Saved best model with validation loss: 2.8608
Training Epoch 6/22: 100%|██████████| 8299/8299 [1:11:42<00:00,  1.93it/s] 
Epoch [6/22] Train: Loss: 2.6578, Class Loss: 2.5102, heat Loss: 0.0074, Accuracy: 0.3380
Validation Epoch 6/22:   9%|▉         | 180/2022 [00:42<05:12,  5.89it/s]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
Validation Epoch 6/22: 100%|██████████| 2022/2022 [10:31<00:00,  3.20it/s]
Validation Epoch [6/22] Loss: 2.7923, Class Loss: 2.6701, heat Loss: 0.0061, Accuracy: 0.3348
Saved best model with validation loss: 2.7923
Training Epoch 7/22: 100%|██████████| 8299/8299 [1:06:34<00:00,  2.08it/s]
Epoch [7/22] Train: Loss: 2.4934, Class Loss: 2.3463, heat Loss: 0.0074, Accuracy: 0.3696
Validation Epoch 7/22:   9%|▉         | 180/2022 [01:13<12:55,  2.38it/s]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
torch.Size([3, 496, 496])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..255.0].
Validation Epoch 7/22: 100%|██████████| 2022/2022 [14:59<00:00,  2.25it/s]
Validation Epoch [7/22] Loss: 2.7669, Class Loss: 2.5712, heat Loss: 0.0098, Accuracy: 0.3457
Saved best model with validation loss: 2.7669
Training Epoch 8/22:  63%|██████▎   | 5205/8299 [1:10:14<25:15,  2.04it/s]  
